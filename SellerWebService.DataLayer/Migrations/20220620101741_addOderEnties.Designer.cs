// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SellerWebService.DataLayer.Context;

#nullable disable

namespace SellerWebService.DataLayer.Migrations
{
    [DbContext(typeof(SellerContext))]
    [Migration("20220620101741_addOderEnties")]
    partial class addOderEnties
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Account.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("StoreCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("StoreDataId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UniqueCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("StoreDataId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Account.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmailActiveCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMobileActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MobileActiveCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("StoreCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("StoreDataId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UniqueCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("StoreDataId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Factor.Factor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<Guid>("Code")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<int>("DeliveryDate")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FactorStatus")
                        .HasColumnType("int");

                    b.Property<int>("FinalFactorPaymentState")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinalPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("FinalPrice")
                        .HasColumnType("bigint");

                    b.Property<string>("FinalTracingCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FirstFactorPaymentState")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FirstPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstTracingCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinalPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Prepayment")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("TotalDiscount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalPrice")
                        .HasColumnType("bigint");

                    b.Property<int>("taxation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Factors");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Factor.FactorDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<long>("FactorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Packaging")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("FactorDetails");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.GroupForProductFeature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<long>("ProductFeatureCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("StoreDataId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductFeatureCategoryId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreDataId");

                    b.ToTable("GroupForProductFeatures");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DefaultPrice")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PictureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SeoTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("StoreDataId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StoreDataId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.ProductFeature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<long>("ExtraPrice")
                        .HasColumnType("bigint");

                    b.Property<long>("GroupForProductFeatureId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("StoreDataId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupForProductFeatureId");

                    b.HasIndex("StoreDataId");

                    b.ToTable("ProductFeatures");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.ProductFeatureCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StoreDataId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StoreDataId");

                    b.ToTable("ProductFeatureCategories");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.ProductGallery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayPriority")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductGalleries");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Store.BankData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ShabaNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("StoreCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("StoreDataId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StoreDataId");

                    b.ToTable("BankDatas");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Store.StoreData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OwnerLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersonalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UniqueCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("StoreDatas");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Store.StoreDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SigntureImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StampImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoreCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("StoreDataId")
                        .HasColumnType("bigint");

                    b.Property<string>("TelegramNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WhatsappNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("StoreDataId");

                    b.ToTable("StoreDetails");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Store.StorePayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPayed")
                        .HasMaxLength(200)
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StoreCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("StoreDataId")
                        .HasColumnType("bigint");

                    b.Property<string>("TracingCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StoreDataId");

                    b.ToTable("StorePayment");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.TempV2.Presell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Presells");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Tickets.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FactorCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForService")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadByOwner")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReadByaSender")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("StoreDataId")
                        .HasColumnType("bigint");

                    b.Property<int>("TicketSection")
                        .HasColumnType("int");

                    b.Property<int>("TicketState")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("StoreDataId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Tickets.TicketsMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketsMessages");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Account.Customer", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Store.StoreData", "StoreData")
                        .WithMany("Customers")
                        .HasForeignKey("StoreDataId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Account.User", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Store.StoreData", "StoreData")
                        .WithMany("Users")
                        .HasForeignKey("StoreDataId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Factor.Factor", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Account.Customer", "Customer")
                        .WithMany("Factors")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Factor.FactorDetails", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Factor.Factor", "Factor")
                        .WithMany("FactorDetails")
                        .HasForeignKey("FactorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.GroupForProductFeature", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Products.ProductFeatureCategory", "ProductFeatureCategory")
                        .WithMany("GroupForProductFeatures")
                        .HasForeignKey("ProductFeatureCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellerWebService.DataLayer.Entities.Products.Product", "Product")
                        .WithMany("GroupForProductFeatures")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellerWebService.DataLayer.Entities.Store.StoreData", "StoreData")
                        .WithMany("GroupForProductFeatures")
                        .HasForeignKey("StoreDataId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductFeatureCategory");

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.Product", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Store.StoreData", "StoreData")
                        .WithMany("Products")
                        .HasForeignKey("StoreDataId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.ProductFeature", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Products.GroupForProductFeature", "GroupForProductFeature")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("GroupForProductFeatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SellerWebService.DataLayer.Entities.Store.StoreData", "StoreData")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("StoreDataId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GroupForProductFeature");

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.ProductFeatureCategory", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Store.StoreData", "StoreData")
                        .WithMany("ProductFeatureCategories")
                        .HasForeignKey("StoreDataId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.ProductGallery", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Products.Product", "Product")
                        .WithMany("ProductGalleries")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Store.BankData", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Store.StoreData", "StoreData")
                        .WithMany("BankDatas")
                        .HasForeignKey("StoreDataId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Store.StoreDetails", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Store.StoreData", "StoreData")
                        .WithMany("StoreDetails")
                        .HasForeignKey("StoreDataId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Store.StorePayment", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Store.StoreData", "StoreData")
                        .WithMany("StorePayments")
                        .HasForeignKey("StoreDataId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Tickets.Ticket", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Store.StoreData", "StoreData")
                        .WithMany()
                        .HasForeignKey("StoreDataId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Tickets.TicketsMessage", b =>
                {
                    b.HasOne("SellerWebService.DataLayer.Entities.Tickets.Ticket", "Ticket")
                        .WithMany("TicketsMessages")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Account.Customer", b =>
                {
                    b.Navigation("Factors");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Factor.Factor", b =>
                {
                    b.Navigation("FactorDetails");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.GroupForProductFeature", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.Product", b =>
                {
                    b.Navigation("GroupForProductFeatures");

                    b.Navigation("ProductGalleries");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Products.ProductFeatureCategory", b =>
                {
                    b.Navigation("GroupForProductFeatures");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Store.StoreData", b =>
                {
                    b.Navigation("BankDatas");

                    b.Navigation("Customers");

                    b.Navigation("GroupForProductFeatures");

                    b.Navigation("ProductFeatureCategories");

                    b.Navigation("ProductFeatures");

                    b.Navigation("Products");

                    b.Navigation("StoreDetails");

                    b.Navigation("StorePayments");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SellerWebService.DataLayer.Entities.Tickets.Ticket", b =>
                {
                    b.Navigation("TicketsMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
